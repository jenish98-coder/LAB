.model small
.stack
.data
.code
main proc
    mov ax, @data   ; Load the data segment address into AX
    mov ds, ax      ; Set DS to point to the data segment
    mov cx, 0h      ; Initialize CX (counter) to 0

read_char:
    mov ah, 01h     ; DOS function 01h - Read character from standard input (keyboard)
    int 21h         ; Call DOS interrupt 21h to read a character
    cmp al, 0dh     ; Compare the input character (AL) with carriage return (0x0D)

    je end          ; If they are equal (Enter key pressed), jump to "end"

    push ax         ; Push the input character (AL) onto the stack
    inc cx          ; Increment CX to count the number of characters
    jmp read_char   ; Repeat the loop to read the next character

end:
    pop dx          ; Pop the last character from the stack into DX
    mov ah, 02h     ; DOS function 02h - Write character to standard output
    int 21h         ; Call DOS interrupt 21h to print the character in DL (which contains the last character)

    loop end        ; Decrement CX and loop back to "end" until CX becomes 0

    mov ax, 4c00h   ; DOS function 4Ch - Exit program with return code 0
    int 21h

main endp
end main
